import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

ts = pd.read_pickle('../data/processedData/smoothPlate/16Hz/x400/180926_16Hz_x400/timeSeries/lowFil_errors/lowFil_errors_180926_sampleTimeExperiments.000033.pkl')
print(str(int(ts.NXYZ.iloc[3]*10)))
plt.rc('font', **{'family': 'serif', 'serif': ['Computer Modern'], 'size':'20'})
plt.rc('text', usetex=True)
fig = plt.figure()
ax = fig.add_subplot(1,1,1)
ax.plot(ts.timeStamp,ts.UxMean/ts.UxMean.iloc[-1],linewidth=1.5,label=r"$\overline{U}(t) / \overline{U}$")
ax.plot(ts.timeStamp,(ts.uxRMS/ts.uxRMS.iloc[-1])**2,linewidth=1.5,label=r"$\overline{u'u'}(t) /\overline{u'u'}$")
ax.plot(ts.timeStamp,(ts.uyRMS/ts.uyRMS.iloc[-1])**2,linewidth=1.5,label=r"$\overline{v'v'}(t) /\overline{v'v'}$")
ax.plot(ts.timeStamp,ts.uv/ts.uv.iloc[-1],linewidth=1.5,label=r"$\overline{u'v'}(t) /\overline{u'v'}$")
ax.set_xlabel('$t$ (s)',fontsize='30')
#ax.set_ylabel(yLabel,fontsize='30')#,rotation=0,labelpad=45)
plt.tight_layout()
box = ax.get_position()
ax.legend(loc='upper right',numpoints=1,prop={'size':18})
ax.set_ylim([0.8, 1.2])
plt.minorticks_on()
plt.grid(True, which='minor',alpha=0.6)
plt.grid(True, which='major',linewidth=0.9)
writeName = str('../data/processedData/figures/statConvergence/16Hz_' + str(int(ts.NXYZ.iloc[3]*10)) +  '.png')
plt.savefig(writeName)
#plt.show()
plt.close()

ts = pd.read_pickle('../data/processedData/smoothPlate/4Hz/x400/180926_4Hz_x400/timeSeries/lowFil_errors/lowFil_errors_180926_sampleTimeExperiments.000006.pkl')

plt.rc('font', **{'family': 'serif', 'serif': ['Computer Modern'], 'size':'20'})
plt.rc('text', usetex=True)
fig = plt.figure()
ax = fig.add_subplot(1,1,1)
ax.plot(ts.timeStamp,ts.UxMean/ts.UxMean.iloc[-1],linewidth=1.5,label=r"$\overline{U}(t) / \overline{U}$")
ax.plot(ts.timeStamp,(ts.uxRMS/ts.uxRMS.iloc[-1])**2,linewidth=1.5,label=r"$\overline{u'u'}(t) /\overline{u'u'}$")
ax.plot(ts.timeStamp,(ts.uyRMS/ts.uyRMS.iloc[-1])**2,linewidth=1.5,label=r"$\overline{v'v'}(t) /\overline{v'v'}$")
ax.plot(ts.timeStamp,ts.uv/ts.uv.iloc[-1],linewidth=1.5,label=r"$\overline{u'v'}(t) /\overline{u'v'}$")
ax.set_xlabel('$t$ (s)',fontsize='30')
#ax.set_ylabel(yLabel,fontsize='30')#,rotation=0,labelpad=45)
plt.tight_layout()
box = ax.get_position()
ax.legend(loc='upper right',numpoints=1,prop={'size':18})
ax.set_ylim([0.8, 1.2])
plt.minorticks_on()
plt.grid(True, which='minor',alpha=0.6)
plt.grid(True, which='major',linewidth=0.9)
writeName = str('../data/processedData/figures/statConvergence/4Hz_' + str(int(ts.NXYZ.iloc[3]*10)) +  '.png')
plt.savefig(writeName)
#plt.show()
plt.close()
